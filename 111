#include <iostream>
#include <cstdlib> // malloc, free


/**
Q1: new运算符和operator new()区别?
*/
class MyClass {
public:
    int data;

    MyClass(int val = 0) : data(val) {
        std::cout << "Constructor: MyClass(" << data << ")" << std::endl;
    }

    ~MyClass() {
        std::cout << "Destructor: MyClass(" << data << ")" << std::endl;
    }

    // 自定义 new
    void* operator new(size_t size) {
        std::cout << "Custom new for size: " << size << std::endl;
        void* ptr = malloc(size);
        if (!ptr) throw std::bad_alloc(); // 处理分配失败
        return ptr;
    }

    // 自定义 delete
    void operator delete(void* ptr) {
        std::cout << "Custom delete" << std::endl;
        free(ptr);
    }
};

int main() {
    MyClass* obj = new MyClass(42);
    //new 运算符是 C++ 提供的高级封装，它的工作流程如下：
    //调用 operator new 来分配内存。
    //调用构造函数 在分配的内存上创建对象。
    delete obj;
    return 0;
}
